//Combinations 77
class Solution {
    private void combinations(int idx,int n,int k,List<List<Integer>> res, List<Integer> comb){
        if(k==0){
            res.add(new ArrayList<>(comb));
            return;
        }  
        // int remainingPlace = k - comb.size();
        // int last = n - 
        for(int i=idx;i<=n-k+1;i++){
            comb.add(i);
            combinations(i+1,n,k-1,res,comb);
            comb.remove(comb.size()-1);
        }
        
    }
    
    public List<List<Integer>> combine(int n, int k) {
        List<List<Integer>> res = new ArrayList<>();    
        
        
        combinations(1,n,k,res, new ArrayList<>());
            
        return res;    
        
    }
}
