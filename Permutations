// Extra Space Approach
//Permutation 46 : 

class Solution {
    private void permutation(int[] nums,List<List<Integer>> res,List<Integer>ds, boolean[] seen){
        
        if(ds.size() == nums.length){
            res.add(new ArrayList<>(ds));
            return;
        }
        for(int i=0;i<nums.length;i++){
            if(!seen[i]){
                seen[i] = true;
                ds.add(nums[i]);
                permutation(nums,res,ds,seen);
                ds.remove(ds.size()-1);
                seen[i] =false;
            }
        }
    }
    
    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> res = new ArrayList<>();
        boolean[] seen= new boolean[nums.length];
        
        permutation(nums, res, new ArrayList<>(), seen);
        
        return res;
        
    }
}
